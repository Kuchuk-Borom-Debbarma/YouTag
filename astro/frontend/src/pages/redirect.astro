<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Token Generation</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f7f7f7;
        }

        .container {
            text-align: center;
            background-color: white;
            border-radius: 8px;
            padding: 40px;
            width: 100%;
            max-width: 400px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        h1 {
            font-size: 24px;
            margin-bottom: 20px;
            color: #333;
        }

        .status {
            font-size: 18px;
            color: #333;
            margin-top: 20px;
        }

        .status.loading {
            color: #ffa500;
        }

        .status.success {
            color: #28a745;
        }

        .status.error {
            color: #dc3545;
        }

        .spinner {
            border: 4px solid rgba(255, 255, 255, 0.3);
            border-top: 4px solid #3498db;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .button {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 20px;
            display: none;
        }

        .button.show {
            display: inline-block;
        }

        @media (max-width: 600px) {
            .container {
                padding: 30px;
            }

            h1 {
                font-size: 20px;
            }

            .status {
                font-size: 16px;
            }

            .button {
                width: 100%;
                padding: 14px;
            }
        }
    </style>
</head>
<body>
<div class="container">
    <h1>Token Generation</h1>
    <div id="status" class="status">Initializing...</div>
    <div id="spinner" class="spinner"></div>
    <button id="redirectButton" class="button show">Redirecting...</button>
</div>

<script>
    import { getJwtToken } from "../services/AuthService";

    const urlParams = new URLSearchParams(window.location.search);
    const code = urlParams.get('code');
    const state = urlParams.get('state');

    const statusElement = document.getElementById('status');
    const spinnerElement = document.getElementById('spinner');
    const redirectButton = document.getElementById('redirectButton');

    async function getToken() {
        if (state == null || code == null) {
            updateUI("error", "State and/or code is missing from query parameter");
            return;
        }

        updateUI("loading", "Generating token...");

        try {
            const token = await getJwtToken(code, state);
            console.log("Setting token as server cookie")
            // Set token to a cookie or whatever is required
            const response = await fetch("/api/cookie", {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ key: 'token', value: token }),
            });

            if (response.ok) {
                updateUI("success", "Token generated successfully! Redirecting...");
                setTimeout(() => {
                    window.location.href = "/"; // Redirect to home
                }, 2000);
            } else {
                updateUI("error", "Failed to set cookie.");
            }
        } catch (error) {
            updateUI("error", "Error generating token or setting cookie.");
            console.error(error);
        }
    }

    function updateUI(status, message) {
        spinnerElement.style.display = status === "loading" ? "block" : "none";
        statusElement.className = `status ${status}`;
        statusElement.textContent = message;

        if (status === "success") {
            redirectButton.classList.add("show");
        }
    }

    //TODO :- Server cookie not updated

    getToken(); // Start the token generation process
</script>
</body>
</html>

